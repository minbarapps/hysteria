#!/bin/bash

HOST='136.243.103.110';
USER='viptunnelvpn_ownT';
PASS='dx8qLn2WOqz7';
DB='viptunnelvpn_ownT';

service=$1
ip=$(ip route get 8.8.8.8 | awk '/src/ {f=NR} f&&NR-1==f' RS=" ")


# Full paths to binaries
NEOFETCH="/usr/bin/neofetch"
VNSTAT="/usr/bin/vnstat"

# Check if binaries exist
if [ ! -x "$NEOFETCH" ] || [ ! -x "$VNSTAT" ]; then
    echo "Error: neofetch or vnstat not found. Make sure they are installed and in your PATH."
fi

# Get system information
os="$($NEOFETCH os)"; os="${os##*: }"
distro="$($NEOFETCH distro)"; distro="${distro##*: }"
cpu="$($NEOFETCH cpu --cpu_speed on --cpu_cores off)"; cpu="${cpu##*: }"
memory="$($NEOFETCH memory)"; memory="${memory##*: }"
disk="$($NEOFETCH disk)"; disk="${disk##*: }"
uptime="$($NEOFETCH uptime)"; uptime="${uptime##*: }"
bandwidth="$($VNSTAT --oneline | cut -d ";" -f 15)"

  

tcp_port='1194'
tcpovpn=$(systemctl is-active openvpn-server@server.service)
tcpusers=$(sed -n -e '/^ROUTING_TABLE/p' /etc/openvpn/server/tcpclient.log | wc -l)
totalovpn=$((tcpusers + udpusers))


output=$(cat <<EOF
{
 "service": "openvpn protocol",
 "ip": "$ip",
 "users": "$totalovpn",
 "bandwidth": "$bandwidth",
 "os": "$os",
 "distro": "$distro",
 "cpu": "$cpu",
 "memory": "$memory",
 "disk": "$disk",
 "uptime": "$uptime",
 "tcp_port": "$tcp_port - $tcpovpn"
}
EOF
)

mysql -u $USER -p$PASS -D $DB -h $HOST -e "UPDATE server_list SET cpu_model='$cpu', distro='$distro', memory='$memory', uptime='$uptime', disk='$disk', bandwidth='$bandwidth', os='$os', proto='$service',  tcp_status='$tcpovpn',  tcp='$tcp_port', online='$tcpusers' WHERE server_ip='$ip' "



  
  
elif [[ $service == "reboot" ]];
then
sudo shutdown -r now
fi
